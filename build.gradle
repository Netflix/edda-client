
// Establish version and status
ext.githubProjectName = 'edda-client'

buildscript {
  repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
  }
  apply from: file('gradle/buildscript.gradle'), to: buildscript 
}

allprojects {
  apply plugin: 'idea'
  apply plugin: 'project-report'
  apply plugin: 'me.champeau.gradle.jmh'
  apply plugin: 'com.github.ben-manes.versions'

  repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
  }
}

apply from: file('gradle/convention.gradle')
apply from: file('gradle/maven.gradle')
apply from: file('gradle/check.gradle')
apply from: file('gradle/license.gradle')
apply from: file('gradle/release.gradle')

subprojects {
  apply plugin: 'java'
  apply plugin: 'jacoco'

  group = "com.netflix.${githubProjectName}"

  sourceCompatibility = 1.7
  targetCompatibility = 1.7

  tasks.withType(Compile) { 
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation" 
  }

  if (System.getProperty("java.version").startsWith("1.8.")) {
    tasks.withType(Javadoc) {
      // http://blog.joda.org/2014/02/turning-off-doclint-in-jdk-8-javadoc.html
      options.addStringOption('Xdoclint:none', '-quiet')
    }
  }

  javadoc {
    options {
      links = ['http://docs.oracle.com/javase/7/docs/api/']
    }
  }

  dependencies {
    compile 'org.slf4j:slf4j-api:1.7.7'
    compile 'com.netflix.awsobjectmapper:awsobjectmapper:1.9.3.0'
    compile 'com.netflix.spectator:spectator-nflx:0.16-SNAPSHOT'
    compile 'commons-io:commons-io:2.4'
    testCompile 'junit:junit:4.10'
    testCompile 'nl.jqno.equalsverifier:equalsverifier:1.4.1'
    jmh 'org.slf4j:slf4j-simple:1.7.7'
  }

  jmh {
    warmupIterations = 2
    iterations = 10
    fork = 5
    profilers = ['STACK']
    include '.*'
  }

  jacoco {
    toolVersion = "0.7.1.201405082137"
  }

  jacocoTestReport {
    additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
    reports {
      xml.enabled false
      csv.enabled false
      html.destination "${buildDir}/reports/jacoco"
    }
  }

  task copyDepsToBuild << {
    ['compile', 'runtime', 'testCompile', 'testRuntime'].each { conf ->
      delete "${buildDir}/dependencies/${conf}"
      copy {
        from configurations[conf]
        into "${buildDir}/dependencies/${conf}"
      }
    }
  }
}
